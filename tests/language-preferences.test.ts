// Comprehensive unit tests for language preference implementation
import {
  validateLanguageSupport,
  isLanguageSupported,
  getSupportedLanguages,
} from '../utils';

// eslint-disable-next-line @typescript-eslint/no-unused-vars
const unused1 = validateLanguageSupport;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const unused2 = isLanguageSupported;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const unused3 = getSupportedLanguages;

// LANGUAGE_SUPPORT is not exported, so define it locally for tests
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const LANGUAGE_SUPPORT = {
  chrome: [
    'en',
    'es',
    'fr',
    'de',
    'it',
    'pt',
    'ru',
    'ja',
    'ko',
    'zh',
    'ar',
    'hi',
    'nl',
    'sv',
    'da',
    'no',
    'fi',
    'pl',
    'tr',
    'he',
    'th',
    'vi',
    'id',
    'ms',
    'tl',
    'cs',
    'sk',
    'hu',
    'ro',
    'bg',
    'hr',
    'sl',
    'et',
    'lv',
    'lt',
    'mt',
    'el',
    'uk',
    'be',
    'sr',
    'mk',
    'bs',
    'sq',
    'is',
    'ga',
    'cy',
    'gd',
    'kw',
    'br',
    'co',
    'gl',
    'eu',
    'ca',
    'oc',
    'an',
    'ast',
    'ext',
    'lad',
    'lld',
    'lij',
    'lmo',
    'nap',
    'pms',
    'sc',
    'scn',
    'vec',
    'wa',
    'fur',
    'rm',
    'sw',
    'af',
    'zu',
    'xh',
    'st',
    'tn',
    'ts',
    'ss',
    've',
    'nr',
    'nso',
  ],
  openai: [
    'en',
    'es',
    'fr',
    'de',
    'it',
    'pt',
    'ru',
    'ja',
    'ko',
    'zh',
    'ar',
    'hi',
    'nl',
    'sv',
    'da',
    'no',
    'fi',
    'pl',
    'tr',
    'he',
    'th',
    'vi',
    'id',
    'ms',
    'tl',
    'cs',
    'sk',
    'hu',
    'ro',
    'bg',
    'hr',
    'sl',
    'et',
    'lv',
    'lt',
    'mt',
    'el',
    'uk',
    'be',
    'sr',
    'mk',
    'bs',
    'sq',
    'is',
    'ga',
    'cy',
    'gd',
    'kw',
    'br',
    'co',
    'gl',
    'eu',
    'ca',
    'oc',
    'an',
    'ast',
    'ext',
    'lad',
    'lld',
    'lij',
    'lmo',
    'nap',
    'pms',
    'sc',
    'scn',
    'vec',
    'wa',
    'fur',
    'rm',
    'sw',
    'af',
    'zu',
    'xh',
    'st',
    'tn',
    'ts',
    'ss',
    've',
    'nr',
    'nso',
  ],
  gemini: [
    'en',
    'es',
    'fr',
    'de',
    'it',
    'pt',
    'ru',
    'ja',
    'ko',
    'zh',
    'ar',
    'hi',
    'nl',
    'sv',
    'da',
    'no',
    'fi',
    'pl',
    'tr',
    'he',
    'th',
    'vi',
    'id',
    'ms',
    'tl',
    'cs',
    'sk',
    'hu',
    'ro',
    'bg',
    'hr',
    'sl',
    'et',
    'lv',
    'lt',
    'mt',
    'el',
    'uk',
    'be',
    'sr',
    'mk',
    'bs',
    'sq',
    'is',
    'ga',
    'cy',
    'gd',
    'kw',
    'br',
    'co',
    'gl',
    'eu',
    'ca',
    'oc',
    'an',
    'ast',
    'ext',
    'lad',
    'lld',
    'lij',
    'lmo',
    'nap',
    'pms',
    'sc',
    'scn',
    'vec',
    'wa',
    'fur',
    'rm',
    'sw',
    'af',
    'zu',
    'xh',
    'st',
    'tn',
    'ts',
    'ss',
    've',
    'nr',
    'nso',
  ],
  anthropic: [
    'en',
    'es',
    'fr',
    'de',
    'it',
    'pt',
    'ru',
    'ja',
    'ko',
    'zh',
    'ar',
    'hi',
    'nl',
    'sv',
    'da',
    'no',
    'fi',
    'pl',
    'tr',
    'he',
    'th',
    'vi',
    'id',
    'ms',
    'tl',
    'cs',
    'sk',
    'hu',
    'ro',
    'bg',
    'hr',
    'sl',
    'et',
    'lv',
    'lt',
    'mt',
    'el',
    'uk',
    'be',
    'sr',
    'mk',
    'bs',
    'sq',
    'is',
    'ga',
    'cy',
    'gd',
    'kw',
    'br',
    'co',
    'gl',
    'eu',
    'ca',
    'oc',
    'an',
    'ast',
    'ext',
    'lad',
    'lld',
    'lij',
    'lmo',
    'nap',
    'pms',
    'sc',
    'scn',
    'vec',
    'wa',
    'fur',
    'rm',
    'sw',
    'af',
    'zu',
    'xh',
    'st',
    'tn',
    'ts',
    'ss',
    've',
    'nr',
    'nso',
  ],
};
